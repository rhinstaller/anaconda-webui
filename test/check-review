#!/usr/bin/python3
#
# Copyright (C) 2022 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; If not, see <http://www.gnu.org/licenses/>.

import anacondalib

from installer import Installer
from storage import Storage  # pylint: disable=import-error
from review import Review
from progress import Progress
from utils import add_public_key
from testlib import nondestructive, test_main  # pylint: disable=import-error


@nondestructive
class TestReview(anacondalib.VirtInstallMachineCase):

    def testBasic(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        s = Storage(b, m)
        r = Review(b)

        i.open()
        # After clicking 'Next' on the storage step, partitioning is done, thus changing the available space on the disk
        # Since this is a non-destructive test we need to make sure the we reset partitioning to how it was before the test started
        self.addCleanup(s.dbus_reset_partitioning)
        i.reach(i.steps.REVIEW)

        # check language is shown
        r.check_language("English (United States)")

        # check selected disks are shown
        r.check_disk("vda", "16.1 GB vda (0x1af4)")

        # check encryption choice
        r.check_encryption("Disabled")

        # check storage configuration
        r.check_storage_config("Erase data and install")

        # Pixel test the review step
        b.assert_pixels(
            "#app",
            "review-step-basic",
            ignore=["#betanag-icon", ".logo"],
            wait_animations=False,
        )

    def testNoConfirmation(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        s = Storage(b, m)

        self.addCleanup(s.dbus_reset_partitioning)

        i.open()

        i.reach(i.steps.REVIEW)
        i.begin_installation(should_fail=True, confirm_erase=False)

if __name__ == '__main__':
    test_main()

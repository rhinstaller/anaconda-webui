#!/usr/bin/python3
#
# Copyright (C) 2024 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; If not, see <http://www.gnu.org/licenses/>.

import os

from anacondalib import VirtInstallMachineCase
from installer import Installer
from review import Review
from storage import Storage
from storagelib import StorageCase  # pylint: disable=import-error
from testlib import nondestructive, skipImage, test_main  # pylint: disable=import-error

TEST_DIR = os.path.dirname(__file__)
ROOT_DIR = os.path.dirname(TEST_DIR)
BOTS_DIR = f'{ROOT_DIR}/bots'


@nondestructive
class TestHomeReuseFedora(VirtInstallMachineCase, StorageCase):
    disk_image = "fedora-rawhide"
    efi = False

    def testBasic(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        s = Storage(b, m)
        r = Review(b, m)

        dev="vda"

        i.open()
        i.reach(i.steps.INSTALLATION_METHOD)
        s.rescan_disks()

        #s.wait_scenario_available("home-reuse", False)

        s.set_partitioning("home-reuse")
        # Reaching REVIEW from here does not work with encryption checkbox disabled
        # as there is a callback unsetting it.
        i.next()
        i.reach(i.steps.REVIEW)

        # check selected disks are shown
        r.check_disk(dev, f"16.1 GB {dev} (0x1af4)")
        r.check_disk_row(dev, parent=f"{dev}3", action="delete")
        r.check_disk_row(dev, parent=f"{dev}1", action="delete")
        r.check_disk_row(dev, "/boot", f"{dev}3", "1.07 GB", True, "xfs", is_encrypted=False)
        r.check_disk_row(dev, "/", f"{dev}4", "12.8 GB", True, "btrfs", is_encrypted=False)
        r.check_disk_row(dev, "/home", f"{dev}4", "12.8 GB", False, "btrfs", is_encrypted=False,
                         action="reuse")

        # TODO pixel test

    @skipImage("btrfs support missing on fedora-eln image", "fedora-eln-boot")
    def testMultipleRoots(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        s = Storage(b, m)
        r = Review(b, m)

        self.add_disk(15, os.path.join(BOTS_DIR, "./images/fedora-41"))
        self.add_disk(15, os.path.join(BOTS_DIR, "./images/ubuntu-stable"))

        dev_fedora1 = "vda"
        dev_fedora2 = "vdb"
        dev_ubuntu = "vdc"

        s.udevadm_settle()

        i.open()
        i.reach(i.steps.INSTALLATION_METHOD)

        # Select both Fedora disks and verify that home reuse is not available
        s.select_disks([(dev_fedora1, True), (dev_fedora2, True), (dev_ubuntu, False)])
        s.wait_scenario_available("home-reuse", False)

        # Select only single Ubuntu disk and verify that home reuse is not available
        s.select_disks([(dev_fedora1, False), (dev_fedora2, False), (dev_ubuntu, True)])
        s.wait_scenario_available("home-reuse", False)

        # Select Ubuntu disk and Fedora disk and verify that home reuse is not available
        s.select_disks([(dev_fedora1, True), (dev_fedora2, False), (dev_ubuntu, True)])
        s.wait_scenario_available("home-reuse", False)

        # Select only single Fedora disk and verify that home reuse is available
        s.select_disks([(dev_fedora1, True), (dev_fedora2, False), (dev_ubuntu, False)])
        s.wait_scenario_available("home-reuse", True)

        s.set_partitioning("home-reuse")
        # Reaching REVIEW from here does not work with encryption checkbox disabled
        # as there is a callback unsetting it.
        i.next()
        i.reach(i.steps.REVIEW)

        # check selected disks are shown
        r.check_disk(dev_fedora1, f"16.1 GB {dev_fedora1} (0x1af4)")
        r.check_disk_row(dev_fedora1, parent=f"{dev_fedora1}3", action="delete")
        r.check_disk_row(dev_fedora1, parent=f"{dev_fedora1}1", action="delete")
        r.check_disk_row(dev_fedora1, "/boot", f"{dev_fedora1}3", "1.07 GB", True, "xfs", is_encrypted=False)
        r.check_disk_row(dev_fedora1, "/", f"{dev_fedora1}4", "12.8 GB", True, "btrfs", is_encrypted=False)
        r.check_disk_row(dev_fedora1, "/home", f"{dev_fedora1}4", "12.8 GB", False, "btrfs", is_encrypted=False,
                         action="reuse")


class TestHomeReuseFedoraEFI(VirtInstallMachineCase, StorageCase):
    disk_image = "fedora-rawhide"
    efi = True

    def testBasic(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        s = Storage(b, m)
        r = Review(b, m)

        dev="vda"

        i.open()
        i.reach(i.steps.INSTALLATION_METHOD)
        s.rescan_disks()

        s.set_partitioning("home-reuse")
        # Reaching REVIEW from here does not work with encryption checkbox disabled
        # as there is a callback unsetting it.
        i.next()
        i.reach(i.steps.REVIEW)

        # check selected disks are shown
        r.check_disk_row(dev, parent=f"{dev}2", action="delete")
        r.check_disk_row(dev, parent=f"{dev}3", action="delete")
        r.check_disk(dev, f"16.1 GB {dev} (0x1af4)")
        r.check_disk_row(dev, "/boot", f"{dev}3", "1.07 GB", True, "xfs", is_encrypted=False)
        r.check_disk_row(dev, "/boot/efi", f"{dev}2", "629 MB", True, "efi", is_encrypted=False)
        r.check_disk_row(dev, "/", f"{dev}4", "12.8 GB", True, "btrfs", is_encrypted=False)
        r.check_disk_row(dev, "/home", f"{dev}4", "12.8 GB", False, "btrfs", is_encrypted=False,
                         action="reuse")


if __name__ == '__main__':
    test_main()

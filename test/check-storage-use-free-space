#!/usr/bin/python3
#
# Copyright (C) 2025 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; If not, see <http://www.gnu.org/licenses/>.

from anacondalib import VirtInstallMachineCase, disk_images
from installer import Installer
from review import Review
from storage import Storage
from testlib import nondestructive, test_main  # pylint: disable=import-error


@nondestructive
class TestStorageUseFreeSpace(VirtInstallMachineCase):

    @disk_images([("debian-testing", 15)])
    def testBasic(self):
        """
        Description:
            Test dual boot installation with use free space scenario with debian
            prior starting the installation.

        Expected results:
            - The installer should allow the user to select the 'use-free-space' scenario
            - The existing system should be unaffected and shown in the review step
            - When moving back and forward in the storage configuration the partitioning is correctly re-applied [rhbz#2361201]
        """
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        r = Review(b, m)
        s = Storage(b, m)

        i.open()
        i.reach(i.steps.INSTALLATION_METHOD)
        s.check_scenario_selected("use-free-space")
        i.next()
        i.reach(i.steps.REVIEW)
        r.check_storage_config("Share disk with other operating systems: Debian GNU/Linux")

        i.reach_on_sidebar(i.steps.STORAGE_CONFIGURATION)
        i.reach(i.steps.REVIEW)
        r.check_storage_config("Share disk with other operating systems: Debian GNU/Linux")
        r.check_disk_row("vda", "/", "vda3, LVM", "3.22 GB", True, "xfs")


if __name__ == '__main__':
    test_main()

#!/usr/bin/python3
#
# Copyright (C) 2021 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; If not, see <http://www.gnu.org/licenses/>.

import anacondalib

from installer import Installer
from language import Language
from testlib import nondestructive, test_main  # pylint: disable=import-error


@nondestructive
class TestLanguage(anacondalib.VirtInstallMachineCase):

    def setUp(self):
        super().setUp()

        # Switching to a language might produce these messages, which seem to be harmless.
        self.allow_journal_messages("Error .* data: Connection reset by peer")

    def testOtherDefault(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        l = Language(b, m)

        # Set the language in the localization module to German before opening the page
        l.dbus_set_language("de_DE.UTF-8")

        i.open()
        self.addCleanup(l.dbus_set_language, "en_US.UTF-8")
        self.addCleanup(l.select_locale, "en_US")

        # Expect the backend set language to be preselected and the WebUI translated
        l.check_selected_locale("de_DE")
        b.wait_in_text("h2 + h3", "Wählen Sie eine Sprache aus")

    def testLanguageSwitching(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        l = Language(b, m)

        self.addCleanup(l.select_locale, "en_US")

        i.open()

        # Expect the default language - this is en at this point - adjust the test when better guess is implemented
        b.wait_in_text("h2", "Welcome to Fedora Linux")

        l.check_selected_locale("en_US")

        # Assert that search bar starts empty.
        assert l.get_locale_search() == ""
        #b.wait_visible(f".{i.steps.WELCOME}-menu.pf-m-invalid")

        # Check that the language menu shows all menu entries when clicking the toggle button
        l.locale_option_visible('en_US')
        l.locale_option_visible('de_DE')
        l.locale_option_visible('cs_CZ')

        # Check filtering on English names
        l.input_locale_search('cze')
        l.locale_option_visible('en_US', False)
        l.locale_option_visible('de_DE', False)
        l.locale_option_visible('cs_CZ')

        # Check filtering on native names
        l.input_locale_search('Deutsch')
        l.locale_option_visible('en_US', False)
        l.locale_option_visible('de_DE')
        l.locale_option_visible('cs_CZ', False)
        l.input_locale_search('')

        # Select the 'German' language
        l.select_locale("de_DE")
        l.check_selected_locale("de_DE")

        # Pixel test the language step
        b.assert_pixels(
            "#app",
            "language-step-basic",
            # HACK pf-v5-c-menu__item-text is ignored because some of our CI infrastructure is
            # missing CJK and Cyrillic fonts..
            ignore=["#betanag-icon", ".pf-v5-c-menu__item-text"],
            wait_animations=False,
        )

        b.wait_in_text("h2 + h3", "Wählen Sie eine Sprache aus")
        # TODO: Add checks for plural translations when these are present

        # Check that the language is updated in the backend
        # TODO: Check that error messages from the backend show up translated
        language_new = l.dbus_get_language()
        self.assertIn('string "de_DE.UTF-8"', language_new)

        # Expect language direction to be set to RTL for selected languages
        l.select_locale("he_IL", False)
        l.check_selected_locale("he_IL")
        b.wait_attr("html", "dir", "rtl")

        l.select_locale("de_DE")
        l.check_selected_locale("de_DE")
        b.wait_attr("html", "dir", "ltr")

if __name__ == '__main__':
    test_main()

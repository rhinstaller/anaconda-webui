#!/usr/bin/python3
#
# Copyright (C) 2024 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; If not, see <http://www.gnu.org/licenses/>.

from anacondalib import VirtInstallMachineCase, disk_images
from installer import Installer
from review import Review
from storage import Storage
from testlib import nondestructive, test_main  # pylint: disable=import-error


@nondestructive
class TestStorageEraseAll(VirtInstallMachineCase):

    @disk_images([("fedora-rawhide", 15)])
    def testFedora(self):
        """"
        Description:
            Test erase-all scenario with pre-existing Fedora OS

        Expected results:
            - The installer should allow the user to select the erase-all scenario
            - The system should be marked as deleted in the review screen
        """
        b = self.browser
        m = self.machine

        i = Installer(b, m)
        r = Review(b, m)
        s = Storage(b, m)

        i.open()
        i.reach(i.steps.INSTALLATION_METHOD)
        s.check_scenario_index("erase-all", 2)
        s.set_scenario("erase-all")
        i.reach(i.steps.REVIEW)

        for device in ["vda1", "vda2", "vda3", "vda4"]:
            r.check_disk_row("vda", parent=device, action="delete")

        r.check_deleted_system("Fedora Linux")

    def _testWindows_partition_disk(self):
        b = self.browser
        m = self.machine
        s = Storage(b, m)

        disk = "/dev/vda"
        s.partition_disk(disk, [("1MiB", "efi"), ("1GiB", "microsoft-reserved"), ("5GiB", "basic-data")])

    def testWindows(self):
        """
        Description:
            Test erase-all scenario with pre-existing Windows OS

        Expected results:
            - The installer should allow the user to select the erase-all scenario
            - The system should be marked as deleted in the review screen
        """
        b = self.browser
        m = self.machine
        i = Installer(b, m)
        r = Review(b, m)
        s = Storage(b, m)

        i.open()
        i.reach(i.steps.INSTALLATION_METHOD)
        s.set_scenario("erase-all")
        i.reach(i.steps.REVIEW)

        for device in ["vda1", "vda2", "vda3"]:
            r.check_disk_row("vda", parent=device, action="delete")

        r.check_all_erased_checkbox_label()
        r.check_deleted_system("Windows")


if __name__ == '__main__':
    test_main()

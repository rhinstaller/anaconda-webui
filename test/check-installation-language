#!/usr/bin/python3
#
# Copyright (C) 2021 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; If not, see <http://www.gnu.org/licenses/>.

import os
import sys

# import Cockpit's machinery for test VMs and its browser test API
TEST_DIR = os.path.dirname(__file__)
sys.path.append(os.path.join(TEST_DIR, "common"))
sys.path.append(os.path.join(TEST_DIR, "helpers"))
sys.path.append(os.path.join(os.path.dirname(TEST_DIR), "bots/machine"))

from installer import Installer
from language import Language
from testlib import MachineCase, nondestructive, test_main  # pylint: disable=import-error

LOCALIZATION_INTERFACE = "org.fedoraproject.Anaconda.Modules.Localization"
LOCALIZATION_OBJECT_PATH = "/org/fedoraproject/Anaconda/Modules/Localization"

@nondestructive
class TestLanguage(MachineCase):

    def testLanguageSwitching(self):
        b = self.browser
        i = Installer(b)
        l = Language(b)
        m = self.machine

        i.open()

        # Expect the default language - this is en at this point - adjust the test when better guess is implemented
        b.wait_in_text(".pf-c-form__label-text", "Select the language you would like to use.")

        b.wait_val("#language-menu-toggle-select-typeahead", "English (United States)")

        l.clear_language_selector()

        # Check that the language menu shows all menu entries when clicking the toggle button
        b.click("#language-menu-toggle")
        b.wait_visible("#English--English-")
        b.wait_visible("#Deutsch--German-")

        # Check that the language menu shows filtered menu entries
        b.set_input_text("#language-menu-toggle-select-typeahead", "Deutsch")
        b.wait_visible("#Deutsch--German-")
        b.wait_not_present("#English--English-")
        b.click("#language-menu-toggle")

        # Select the 'German' language
        l.select_locale("de_DE")
        b.wait_val("#language-menu-toggle-select-typeahead", "Deutsch (Deutschland)")

        # TODO: Add checks for translations when these are present

        # Check that the language is updated in the backend
        # TODO: Check that error messages from the backend show up translated
        bus_address = m.execute("cat /run/anaconda/bus.address")
        get_language = (
            f'dbus-send --print-reply --bus="{bus_address}" \
                --dest={LOCALIZATION_INTERFACE} \
                {LOCALIZATION_OBJECT_PATH} \
                org.freedesktop.DBus.Properties.Get \
                string:"{LOCALIZATION_INTERFACE}" string:"Language"'
            )
        language_new = m.execute(get_language)
        self.assertIn('string "de_DE.UTF-8"', language_new)

if __name__ == '__main__':
    test_main()
